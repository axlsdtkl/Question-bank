很明显，随着灵活值的增加，我们的答案可行性一定越来越大。如果灵活值为x可行，那么比x大一定不会更差，如果x不可行，那么比x小一定不会更优，故状态的可行性具有单调性，前面为不可行，后面为可行，故可以用二分查找。
对于二分的一个值x,如何判断状态的可行性呢，可以用dp方程，表示当前跳到第i个格子为止，价值最大为多少，它很明显由前面一段里面的最大值转移过来，如果动态查询一段里面的最大值，可以用堆或者线段树，然后我们发现这个转移区间是单调往右走的，故可以用单调队列来优化。